<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.quorum.gauge</groupId>
    <artifactId>quorum-acceptance-tests</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.6.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <generated.sol.dir>${project.build.directory}/generate-sources/sol</generated.sol.dir>

        <!-- only run non-advanced test cases. This property is from gauge-maven-plugin configuration -->
        <tags>basic</tags>

        <!-- dependencies -->
        <web3j-quorum.version>4.0.6</web3j-quorum.version>
        <commons-lang.version>2.6</commons-lang.version>
        <docker-java.version>3.2.1</docker-java.version>

        <!-- there's an issue with code gen in web3j 3.5.0-->
        <web3j.version>4.2.0</web3j.version>
        <gauge-java.version>0.7.4</gauge-java.version>

        <!-- plugins -->
        <gauge-maven-plugin.version>1.4.1</gauge-maven-plugin.version>
        <web3j-maven-plugin.version>4.2.0</web3j-maven-plugin.version>
        <builder-maven-plugin.version>3.0.0</builder-maven-plugin.version>
        <maven-site-plugin.version>3.7.1</maven-site-plugin.version>
        <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
        <github.site-maven-plugin.version>0.12</github.site-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.web3j</groupId>
            <artifactId>core</artifactId>
            <version>${web3j.version}</version>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.gauge</groupId>
            <artifactId>gauge-java</artifactId>
            <version>${gauge-java.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.web3j</groupId>
            <artifactId>quorum</artifactId>
            <version>${web3j-quorum.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.web3j</groupId>
                    <artifactId>core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java-transport-okhttp</artifactId>
            <version>${docker-java.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.thoughtworks.gauge.maven</groupId>
                <artifactId>gauge-maven-plugin</artifactId>
                <version>${gauge-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>run-gauge</id>
                        <phase>test</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <flags>--fail-safe</flags>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.web3j</groupId>
                <artifactId>web3j-maven-plugin</artifactId>
                <version>${web3j-maven-plugin.version}</version>
                <configuration>
                    <packageName>${project.groupId}.sol</packageName>
                    <soliditySourceFiles>
                        <directory>${basedir}/src/main/sol</directory>
                        <includes>
                            <include>**/*.sol</include>
                        </includes>
                    </soliditySourceFiles>
                    <sourceDestination>${generated.sol.dir}</sourceDestination>
                    <outputFormat>java,bin,abi</outputFormat>
                </configuration>
                <executions>
                    <execution>
                        <id>01-generate-sol</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate-sources</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.web3j</groupId>
                        <artifactId>codegen</artifactId>
                        <version>${web3j.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>02-add-source-folder</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated.sol.dir}</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>02-add-sol-bin</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${generated.sol.dir}</directory>
                                    <includes>
                                        <include>**/*.bin</include>
                                        <include>**/*.json</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>auto</id>
            <properties>
                <!-- Gauge environment being used -->
                <env>run-local</env>
                <!-- ignore Terraform apply -->
                <auto.skipApply>false</auto.skipApply>
                <!-- ignore wait utility which checks for network being healthy -->
                <auto.skipWait>false</auto.skipWait>
                <!-- run Terraform destory after test -->
                <auto.forceDestroy>false</auto.forceDestroy>
                <!--
                This value is to differentiate between multiple `mvn` runs.
                Github Actions need to inject different values for different runs so
                it can be aggregated at the end.
                -->
                <auto.jobid>local</auto.jobid>

                <!-- global configuration for exec plugin -->
                <exec.daemonThreadJoinTimeout>15000</exec.daemonThreadJoinTimeout>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>1.0b3</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>check-required-tools</id>
                                <goals><goal>run</goal></goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <!-- make sure we fail fast if tools are not installed -->
                                    <failOnError>true</failOnError>
                                    <exportAntProperties>false</exportAntProperties>
                                    <target name="Check required tools and display their info">
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                                        <ant antfile="${basedir}/src/main/ant/helper.xml"
                                            target="tools"/>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>extract-network-from-tags</id>
                                <goals><goal>run</goal></goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <exportAntProperties>true</exportAntProperties>
                                    <target name="Extract network location and profile from tags"
                                            unless="auto.usingNetwork" if="tags">
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                                        <echo message="Tags: ${tags}" />
                                        <propertyregex property="auto.usingNetwork"
                                                       input="${tags}"
                                                       regexp="(networks/[a-zA-Z-_\.]+)::([0-9a-zA-Z-_\.]+)"
                                                       select="\1"
                                                       casesensitive="false"
                                                       defaultValue="networks/typical"/>
                                        <propertyregex property="auto.networkProfile"
                                                       input="${tags}"
                                                       regexp="(networks/[a-zA-Z-_\.]+)::([0-9a-zA-Z-_\.]+)"
                                                       select="\2"
                                                       casesensitive="false"
                                                       defaultValue="istanbul"/>
                                        <condition property="skipDestroy" value="false" else="true">
                                            <istrue value="${auto.forceDestroy}"/>
                                        </condition>
                                        <echo message="Network location: '${auto.usingNetwork}' with profile '${auto.networkProfile}'"/>
                                        <echo message="Auto-destroying network: ${auto.forceDestroy}"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>terraform-init</id>
                                <goals><goal>exec</goal></goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <skip>${auto.skipApply}</skip>
                                    <commandlineArgs>init</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>terraform-apply</id>
                                <goals><goal>exec</goal></goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <skip>${auto.skipApply}</skip>
                                    <commandlineArgs>apply --auto-approve -var-file terraform.${auto.networkProfile}.tfvars</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- this execution is to populate Gauge environment -->
                                <id>terraform-output-for-gauge</id>
                                <goals><goal>exec</goal></goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <commandlineArgs>output environments</commandlineArgs>
                                    <outputFile>${basedir}/env/${env}/user.properties</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>terraform-output-for-wait-execution</id>
                                <goals><goal>exec</goal></goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <commandlineArgs>output properties</commandlineArgs>
                                    <outputFile>${project.build.directory}/wait.properties</outputFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>wait</id>
                                <goals><goal>exec</goal></goals>
                                <phase>process-test-resources</phase>
                                <configuration>
                                    <skip>${auto.skipWait}</skip>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath/>
                                        <argument>com.quorum.gauge.DockerWaitMain</argument>
                                        <argument>${project.build.directory}/wait.properties</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- this execution is run after Gauge test -->
                                <id>terraform-destroy</id>
                                <goals><goal>exec</goal></goals>
                                <phase>test</phase>
                                <configuration>
                                    <skip>${skipDestroy}</skip>
                                    <commandlineArgs>destroy --auto-approve -var-file terraform.${auto.networkProfile}.tfvars</commandlineArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>extract-test-summary</id>
                                <goals><goal>java</goal></goals>
                                <phase>test</phase>
                                <configuration>
                                    <skip>${skipTests}</skip>
                                    <mainClass>com.quorum.gauge.TestSummaryMain</mainClass>
                                    <!-- This will produce failures.txt and summary.txt in the output folder -->
                                    <commandlineArgs>${auto.jobid} ${project.build.directory}/gauge/reports/xml-report/result.xml</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>terraform</executable>
                            <workingDirectory>${auto.usingNetwork}</workingDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
